@model List<VideogamesWebApp.Models.GameViewModel>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">

<div class="container mt-4">
    <h1 class="text-center text-primary mb-4">All Games</h1>
    <!-- Search Bar -->
    <div class="row mb-4">
        <div class="col-md-6 offset-md-3">
            <div class="input-group">
                <input type="text" class="form-control" id="searchInput" placeholder="Search for games..." aria-label="Search games">
                <button class="btn btn-primary" id="searchButton">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="action-buttons">
        <button onclick="window.location.href='@Url.Action("Index", "Games")'" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back to Library
        </button>
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addGameModal">
            <i class="fas fa-plus"></i> Add New Game
        </button>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#sortModal">
            <i class="bi bi-sort-down"></i> 
        </button>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-circle-fill"></i> @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
        </div>
    }
    <!-- Modal for Sorting Options -->
    <div class="modal fade" id="sortModal" tabindex="-1" aria-labelledby="sortModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="sortModalLabel">Sort Games</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="sortForm">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="sortOrder" id="sortAZ" value="GameNameAsc" checked>
                            <label class="form-check-label" for="sortAZ">
                                Name (A-Z)
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="sortOrder" id="sortZA" value="GameNameDesc">
                            <label class="form-check-label" for="sortZA">
                                Name (Z-A)
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="sortOrder" id="sortDLCAsc" value="DLCCountAsc">
                            <label class="form-check-label" for="sortDLCAsc">
                                DLC Count (Ascending)
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="sortOrder" id="sortDLCDesc" value="DLCCountDesc">
                            <label class="form-check-label" for="sortDLCDesc">
                                DLC Count (Descending)
                            </label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="applySort">Apply</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-5 g-4">
    @foreach (var game in Model)
    {
        <div class="col">
            <div class="card h-100 game-card">
                <img src="@game.CoverImageUrl" class="card-img-top cover-image" alt="@game.GameName" />
                <div class="card-body">
                    <h5 class="card-title">@game.GameName</h5>
                    <p class="card-text text-muted">@game.GameDescription</p>
                </div>
            </div>
        </div>
    }
</div>

    <!-- Pagination controls -->
    <nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
        @{
            var totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
            var currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
            var currentSortOrder = ViewData["CurrentSortOrder"] as string ?? "GameNameAsc";
        }
        <ul class="pagination custom-pagination">
            @{
                if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("ViewAllGames", new { pageNumber = currentPage - 1, sortOrder = currentSortOrder })" aria-label="Previous">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>
                }
                else

                {
                    <li class="page-item disabled">
                        <span class="page-link">
                            <i class="fas fa-chevron-left"></i>
                        </span>
                    </li>
                }

                // Logica per mostrare pagine vicine
                int startPage = Math.Max(1, currentPage - 2);
                int endPage = Math.Min(totalPages, currentPage + 2);

                if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("ViewAllGames", new { pageNumber = 1, sortOrder = currentSortOrder })">1</a>
                    </li>
                    if (startPage > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("ViewAllGames", new { pageNumber = i, sortOrder = currentSortOrder })">@i</a>
                    </li>
                }

                if (endPage < totalPages)
                {
                    if (endPage < totalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("ViewAllGames", new { pageNumber = totalPages, sortOrder = currentSortOrder })">@totalPages</a>
                    </li>
                }

                if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("ViewAllGames", new { pageNumber = currentPage + 1, sortOrder = currentSortOrder })" aria-label="Next">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">
                            <i class="fas fa-chevron-right"></i>
                        </span>
                    </li>
                }
            }
        </ul>
    </nav>

    <!-- Modal for Adding New Game -->
   

    <div class="modal fade" id="dlcModal" tabindex="-1" aria-labelledby="dlcModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="dlcModalLabel">
                        <span id="mainGameTitle"></span>
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <ul id="dlcList" class=" list-group list-group-flush"></ul>

                    <!-- Pagination -->
                    <nav class="mt-3">
                        <ul id="dlcPagination" class="pagination justify-content-center"></ul>
                    </nav>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="~/js/ViewAllGames.js"></script>

<script>
    window.currentPage = @ViewData["CurrentPage"];
    window.sortActionUrl = '@Url.Action("ViewAllGames", "Games")';
</script>